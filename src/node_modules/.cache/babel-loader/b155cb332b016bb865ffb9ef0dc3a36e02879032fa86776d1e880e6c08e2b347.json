{"ast":null,"code":"var __makeTemplateObject = this && this.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n  return cooked;\n};\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nimport { css } from 'styled-components';\nexport var prepareStandardBreakpointTypo = function (typo) {\n  return Object.entries(typo).reduce(function (acc, _a) {\n    var typoKey = _a[0],\n      typoProps = _a[1];\n    Object.entries(typoProps).forEach(function (_a) {\n      var typoProp = _a[0],\n        propValue = _a[1];\n      acc[\"--plasma-typo-\" + typoKey + \"-\" + typoProp] = propValue;\n    });\n    return acc;\n  }, {});\n};\nvar compatProps = ['font-family', 'font-size', 'font-style', 'font-weight', 'letter-spacing', 'line-height'];\nexport var prepareCompatibleTypo = function (typoMap) {\n  return Object.entries(typoMap).reduce(function (acc, _a) {\n    var _b = _a,\n      oldKey = _b[0],\n      _c = _b[1],\n      name = _c.name,\n      rest = __rest(_c, [\"name\"]);\n    var oldPrefix = \"--plasma-typo-\" + oldKey;\n    var newPrefix = \"--plasma-typo-\" + name;\n    compatProps.forEach(function (compatProp) {\n      acc[oldPrefix + \"-\" + compatProp] = \"var(\" + newPrefix + \"-\" + compatProp + \")\";\n    });\n    Object.entries(rest).forEach(function (_a) {\n      var customCompatProp = _a[0],\n        value = _a[1];\n      acc[oldPrefix + \"-\" + customCompatProp] = value;\n    });\n    return acc;\n  }, {});\n};\nexport var mergeTypoProps = function () {\n  var obj = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    obj[_i] = arguments[_i];\n  }\n  return __spreadArrays(obj).reduce(function (resultObj, currentObj) {\n    return Object.entries(currentObj).reduce(function (acc, _a) {\n      var _b;\n      var key = _a[0],\n        value = _a[1];\n      return __assign(__assign({}, acc), (_b = {}, _b[key] = __assign(__assign({}, acc[key]), value), _b));\n    }, resultObj);\n  }, {});\n};\nexport var createVariablesByArcheType = function (_a) {\n  var displayFontFamily = _a.displayFontFamily,\n    textFontFamily = _a.textFontFamily,\n    typoS = _a.typoS,\n    typoM = _a.typoM,\n    typoL = _a.typoL;\n  return function (_a) {\n    var _b = _a.deviceScale,\n      deviceScale = _b === void 0 ? 1 : _b,\n      _c = _a.breakWord,\n      breakWord = _c === void 0 ? true : _c;\n    return css(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n            :root {\\n                --plasma-typo-display-font-family: '\", \"', sans-serif;\\n                --plasma-typo-text-font-family: '\", \"', sans-serif;\\n                --plasma-typo-dspl-l-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-dspl-l-font-style: normal;\\n                --plasma-typo-dspl-l-letter-spacing: normal;\\n                --plasma-typo-dspl-m-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-dspl-m-font-style: normal;\\n                --plasma-typo-dspl-m-letter-spacing: normal;\\n                --plasma-typo-dspl-s-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-dspl-s-font-style: normal;\\n                --plasma-typo-dspl-s-letter-spacing: normal;\\n                --plasma-typo-h1-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-h1-font-style: normal;\\n                --plasma-typo-h1-letter-spacing: normal;\\n                --plasma-typo-h2-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-h2-font-style: normal;\\n                --plasma-typo-h2-letter-spacing: normal;\\n                --plasma-typo-h3-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-h3-font-style: normal;\\n                --plasma-typo-h3-letter-spacing: normal;\\n                --plasma-typo-h4-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-h4-font-style: normal;\\n                --plasma-typo-h4-letter-spacing: normal;\\n                --plasma-typo-h5-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-h5-font-style: normal;\\n                --plasma-typo-h5-letter-spacing: normal;\\n                --plasma-typo-body-l-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-body-l-font-style: normal;\\n                --plasma-typo-body-l-letter-spacing: normal;\\n                --plasma-typo-body-m-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-body-m-font-style: normal;\\n                --plasma-typo-body-m-letter-spacing: normal;\\n                --plasma-typo-body-s-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-body-s-font-style: normal;\\n                --plasma-typo-body-s-letter-spacing: normal;\\n                --plasma-typo-body-xs-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-body-xs-font-style: normal;\\n                --plasma-typo-body-xs-letter-spacing: normal;\\n                --plasma-typo-body-xxs-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-body-xxs-font-style: normal;\\n                --plasma-typo-body-xxs-letter-spacing: normal;\\n                --plasma-typo-text-l-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-text-l-font-style: normal;\\n                --plasma-typo-text-l-letter-spacing: -0.019em;\\n                --plasma-typo-text-m-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-text-m-font-style: normal;\\n                --plasma-typo-text-m-letter-spacing: -0.019em;\\n                --plasma-typo-text-s-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-text-s-font-style: normal;\\n                --plasma-typo-text-s-letter-spacing: -0.019em;\\n                --plasma-typo-text-xs-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-text-xs-font-style: normal;\\n                --plasma-typo-text-xs-letter-spacing: -0.019em;\\n\\n                font-size: \", \"px;\\n\\n                \", \"\\n\\n                \", \"\\n\\n                \", \"\\n\\n                \", \"\\n            }\\n        \"], [\"\\n            :root {\\n                --plasma-typo-display-font-family: '\", \"', sans-serif;\\n                --plasma-typo-text-font-family: '\", \"', sans-serif;\\n                --plasma-typo-dspl-l-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-dspl-l-font-style: normal;\\n                --plasma-typo-dspl-l-letter-spacing: normal;\\n                --plasma-typo-dspl-m-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-dspl-m-font-style: normal;\\n                --plasma-typo-dspl-m-letter-spacing: normal;\\n                --plasma-typo-dspl-s-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-dspl-s-font-style: normal;\\n                --plasma-typo-dspl-s-letter-spacing: normal;\\n                --plasma-typo-h1-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-h1-font-style: normal;\\n                --plasma-typo-h1-letter-spacing: normal;\\n                --plasma-typo-h2-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-h2-font-style: normal;\\n                --plasma-typo-h2-letter-spacing: normal;\\n                --plasma-typo-h3-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-h3-font-style: normal;\\n                --plasma-typo-h3-letter-spacing: normal;\\n                --plasma-typo-h4-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-h4-font-style: normal;\\n                --plasma-typo-h4-letter-spacing: normal;\\n                --plasma-typo-h5-font-family: var(--plasma-typo-display-font-family);\\n                --plasma-typo-h5-font-style: normal;\\n                --plasma-typo-h5-letter-spacing: normal;\\n                --plasma-typo-body-l-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-body-l-font-style: normal;\\n                --plasma-typo-body-l-letter-spacing: normal;\\n                --plasma-typo-body-m-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-body-m-font-style: normal;\\n                --plasma-typo-body-m-letter-spacing: normal;\\n                --plasma-typo-body-s-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-body-s-font-style: normal;\\n                --plasma-typo-body-s-letter-spacing: normal;\\n                --plasma-typo-body-xs-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-body-xs-font-style: normal;\\n                --plasma-typo-body-xs-letter-spacing: normal;\\n                --plasma-typo-body-xxs-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-body-xxs-font-style: normal;\\n                --plasma-typo-body-xxs-letter-spacing: normal;\\n                --plasma-typo-text-l-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-text-l-font-style: normal;\\n                --plasma-typo-text-l-letter-spacing: -0.019em;\\n                --plasma-typo-text-m-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-text-m-font-style: normal;\\n                --plasma-typo-text-m-letter-spacing: -0.019em;\\n                --plasma-typo-text-s-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-text-s-font-style: normal;\\n                --plasma-typo-text-s-letter-spacing: -0.019em;\\n                --plasma-typo-text-xs-font-family: var(--plasma-typo-text-font-family);\\n                --plasma-typo-text-xs-font-style: normal;\\n                --plasma-typo-text-xs-letter-spacing: -0.019em;\\n\\n                font-size: \", \"px;\\n\\n                \", \"\\n\\n                \", \"\\n\\n                \", \"\\n\\n                \", \"\\n            }\\n        \"])), displayFontFamily, textFontFamily, 16 * deviceScale, breakWord && css(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n                        --plasma-typo-overflow-wrap: break-word;\\n                        --plasma-typo-hyphens: auto;\\n                    \"], [\"\\n                        --plasma-typo-overflow-wrap: break-word;\\n                        --plasma-typo-hyphens: auto;\\n                    \"]))), typoS && css(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n                        @media (max-width: \", \"px) {\\n                            \", \"\\n                        }\\n                    \"], [\"\\n                        @media (max-width: \", \"px) {\\n                            \", \"\\n                        }\\n                    \"])), 559 * deviceScale, prepareStandardBreakpointTypo(typoS)), typoM && css(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n                        @media (min-width: \", \"px) and (max-width: \", \"px) {\\n                            \", \"\\n                        }\\n                    \"], [\"\\n                        @media (min-width: \", \"px) and (max-width: \", \"px) {\\n                            \", \"\\n                        }\\n                    \"])), 560 * deviceScale, 959 * deviceScale, prepareStandardBreakpointTypo(typoM)), typoL && css(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n                        @media (min-width: \", \"px) {\\n                            \", \"\\n                        }\\n                    \"], [\"\\n                        @media (min-width: \", \"px) {\\n                            \", \"\\n                        }\\n                    \"])), 960 * deviceScale, prepareStandardBreakpointTypo(typoL)));\n  };\n};\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;","map":{"version":3,"mappings":"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","names":["css","prepareStandardBreakpointTypo","typo","entries","reduce","acc","_a","typoKey","typoProps","Object","forEach","typoProp","propValue","compatProps","prepareCompatibleTypo","typoMap","oldKey","_c","name","rest","oldPrefix","newPrefix","compatProp","customCompatProp","value","mergeTypoProps","_i","obj","resultObj","currentObj","key","createVariablesByArcheType","displayFontFamily","textFontFamily","typoS","typoM","typoL","_b","deviceScale","breakWord"],"sources":["../../src/helpers.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}