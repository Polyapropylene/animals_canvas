{"ast":null,"code":"export var last = function last(array) {\n  return array[array.length - 1];\n};\nexport var padZeroNumber = function padZeroNumber(value) {\n  return \"\".concat(value).padStart(2, '0');\n};\n/**\n * Форматирование названия месяца.\n * Если не передавать `day`, то название месяца будет, например, `июнь`.\n * В данном случае вернется `июня`.\n * Так же результат выполнения метода `formatToParts` является массивом,\n * в котором находятся части даты, форматированной на основнии `options`.\n * То есть в данном случае вернется массив [`day`, `separator`, `month`]\n */\n\nexport var monthName = function monthName(val, monthFormat) {\n  var targetMonth = new Date(2000, val, 1);\n  return last(new Intl.DateTimeFormat('ru-RU', {\n    day: 'numeric',\n    month: monthFormat\n  }).formatToParts(targetMonth)).value;\n};\nexport var monthLongName = function monthLongName(val) {\n  return monthName(val, 'long');\n};\nexport var monthShortName = function monthShortName(val) {\n  return monthName(val, 'short').replace('.', '');\n};","map":{"version":3,"names":["last","array","length","padZeroNumber","value","concat","padStart","monthName","val","monthFormat","targetMonth","Date","Intl","DateTimeFormat","day","month","formatToParts","monthLongName","monthShortName","replace"],"sources":["C:/Users/20618801/Desktop/src/node_modules/@salutejs/plasma-core/es/utils/formatters.js"],"sourcesContent":["export var last = function last(array) {\n  return array[array.length - 1];\n};\nexport var padZeroNumber = function padZeroNumber(value) {\n  return \"\".concat(value).padStart(2, '0');\n};\n/**\n * Форматирование названия месяца.\n * Если не передавать `day`, то название месяца будет, например, `июнь`.\n * В данном случае вернется `июня`.\n * Так же результат выполнения метода `formatToParts` является массивом,\n * в котором находятся части даты, форматированной на основнии `options`.\n * То есть в данном случае вернется массив [`day`, `separator`, `month`]\n */\n\nexport var monthName = function monthName(val, monthFormat) {\n  var targetMonth = new Date(2000, val, 1);\n  return last(new Intl.DateTimeFormat('ru-RU', {\n    day: 'numeric',\n    month: monthFormat\n  }).formatToParts(targetMonth)).value;\n};\nexport var monthLongName = function monthLongName(val) {\n  return monthName(val, 'long');\n};\nexport var monthShortName = function monthShortName(val) {\n  return monthName(val, 'short').replace('.', '');\n};"],"mappings":"AAAA,OAAO,IAAIA,IAAI,GAAG,SAASA,IAAI,CAACC,KAAK,EAAE;EACrC,OAAOA,KAAK,CAACA,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC;AAChC,CAAC;AACD,OAAO,IAAIC,aAAa,GAAG,SAASA,aAAa,CAACC,KAAK,EAAE;EACvD,OAAO,EAAE,CAACC,MAAM,CAACD,KAAK,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AAC1C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,SAAS,GAAG,SAASA,SAAS,CAACC,GAAG,EAAEC,WAAW,EAAE;EAC1D,IAAIC,WAAW,GAAG,IAAIC,IAAI,CAAC,IAAI,EAAEH,GAAG,EAAE,CAAC,CAAC;EACxC,OAAOR,IAAI,CAAC,IAAIY,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;IAC3CC,GAAG,EAAE,SAAS;IACdC,KAAK,EAAEN;EACT,CAAC,CAAC,CAACO,aAAa,CAACN,WAAW,CAAC,CAAC,CAACN,KAAK;AACtC,CAAC;AACD,OAAO,IAAIa,aAAa,GAAG,SAASA,aAAa,CAACT,GAAG,EAAE;EACrD,OAAOD,SAAS,CAACC,GAAG,EAAE,MAAM,CAAC;AAC/B,CAAC;AACD,OAAO,IAAIU,cAAc,GAAG,SAASA,cAAc,CAACV,GAAG,EAAE;EACvD,OAAOD,SAAS,CAACC,GAAG,EAAE,OAAO,CAAC,CAACW,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;AACjD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}