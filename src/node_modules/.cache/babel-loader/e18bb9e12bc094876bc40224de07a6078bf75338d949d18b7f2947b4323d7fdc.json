{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nimport { isValidElement, Children } from 'react';\nexport var extractTextFrom = function extractTextFrom(textSource) {\n  switch (_typeof(textSource)) {\n    case 'string':\n      return textSource;\n    case 'number':\n      return textSource.toString();\n    case 'object':\n      {\n        if (! /*#__PURE__*/isValidElement(textSource) || !textSource.props || !textSource.props.children) {\n          return '';\n        }\n        return Children.map(textSource.props.children, function (child) {\n          return extractTextFrom(child);\n        }).join('');\n      }\n    default:\n      return '';\n  }\n};","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","isValidElement","Children","extractTextFrom","textSource","toString","props","children","map","child","join"],"sources":["/Users/polechkagadukina/Desktop/src/node_modules/@salutejs/plasma-core/es/utils/extractTextFrom.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { isValidElement, Children } from 'react';\nexport var extractTextFrom = function extractTextFrom(textSource) {\n  switch (_typeof(textSource)) {\n    case 'string':\n      return textSource;\n\n    case 'number':\n      return textSource.toString();\n\n    case 'object':\n      {\n        if (! /*#__PURE__*/isValidElement(textSource) || !textSource.props || !textSource.props.children) {\n          return '';\n        }\n\n        return Children.map(textSource.props.children, function (child) {\n          return extractTextFrom(child);\n        }).join('');\n      }\n\n    default:\n      return '';\n  }\n};"],"mappings":"AAAA,SAASA,OAAO,CAACC,GAAG,EAAE;EAAE,yBAAyB;;EAAE,IAAI,OAAOC,MAAM,KAAK,UAAU,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,QAAQ,EAAE;IAAEH,OAAO,GAAG,SAASA,OAAO,CAACC,GAAG,EAAE;MAAE,OAAO,OAAOA,GAAG;IAAE,CAAC;EAAE,CAAC,MAAM;IAAED,OAAO,GAAG,SAASA,OAAO,CAACC,GAAG,EAAE;MAAE,OAAOA,GAAG,IAAI,OAAOC,MAAM,KAAK,UAAU,IAAID,GAAG,CAACG,WAAW,KAAKF,MAAM,IAAID,GAAG,KAAKC,MAAM,CAACG,SAAS,GAAG,QAAQ,GAAG,OAAOJ,GAAG;IAAE,CAAC;EAAE;EAAE,OAAOD,OAAO,CAACC,GAAG,CAAC;AAAE;AAEzX,SAASK,cAAc,EAAEC,QAAQ,QAAQ,OAAO;AAChD,OAAO,IAAIC,eAAe,GAAG,SAASA,eAAe,CAACC,UAAU,EAAE;EAChE,QAAQT,OAAO,CAACS,UAAU,CAAC;IACzB,KAAK,QAAQ;MACX,OAAOA,UAAU;IAEnB,KAAK,QAAQ;MACX,OAAOA,UAAU,CAACC,QAAQ,EAAE;IAE9B,KAAK,QAAQ;MACX;QACE,IAAI,EAAE,aAAaJ,cAAc,CAACG,UAAU,CAAC,IAAI,CAACA,UAAU,CAACE,KAAK,IAAI,CAACF,UAAU,CAACE,KAAK,CAACC,QAAQ,EAAE;UAChG,OAAO,EAAE;QACX;QAEA,OAAOL,QAAQ,CAACM,GAAG,CAACJ,UAAU,CAACE,KAAK,CAACC,QAAQ,EAAE,UAAUE,KAAK,EAAE;UAC9D,OAAON,eAAe,CAACM,KAAK,CAAC;QAC/B,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;MACb;IAEF;MACE,OAAO,EAAE;EAAC;AAEhB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}