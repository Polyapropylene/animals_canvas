{"ast":null,"code":"var _excluded = [\"lines\", \"width\", \"roundness\", \"size\"];\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport styled from 'styled-components';\nimport { DEFAULT_TEXT_SIZE } from './Skeleton';\nimport { LineSkeleton } from './LineSkeleton';\nvar variousWidth = [7.58, 5.27, 13.54, 6.63, 0.28, 14.8, 0.33, 11.26, 14.1, 10.59, 3.38, 13.5, 7.71, 3.34, 7.96];\nvar StyledTextSkeleton = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-x4ekfh-0\"\n})([\"display:flex;flex-direction:column;width:100%;\"]); // TODO: https://github.com/salute-developers/plasma/issues/230\n\n/**\n * Компонент для создания плейсхолдера нескольких строк текста.\n * Размеры компонента задаются с помощью констант и соответствуют размерам [типографических элементов](/?path=/docs/).\n */\nexport var TextSkeleton = function TextSkeleton(_ref) {\n  var lines = _ref.lines,\n    width = _ref.width,\n    roundness = _ref.roundness,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? DEFAULT_TEXT_SIZE : _ref$size,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(StyledTextSkeleton, props, Array.from(Array(lines), function (_, i) {\n    var w;\n    if (width) {\n      // TODO; https://github.com/salute-developers/plasma/issues/230\n      w = width;\n    } else {\n      switch (true) {\n        // Последняя строка\n        case i === lines - 1 && lines !== 1:\n          w = 45 - variousWidth[i % variousWidth.length];\n          break;\n        // Единственная или первая из двух\n\n        case lines === 1 || lines === 2:\n          w = 100;\n          break;\n        default:\n          w = 100 - variousWidth[i % variousWidth.length];\n      }\n    }\n    return /*#__PURE__*/React.createElement(LineSkeleton, {\n      key: \"line:\".concat(i),\n      size: size,\n      roundness: roundness,\n      style: {\n        width: \"\".concat(w, \"%\")\n      }\n    });\n  }));\n};","map":{"version":3,"names":["_excluded","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","React","styled","DEFAULT_TEXT_SIZE","LineSkeleton","variousWidth","StyledTextSkeleton","div","withConfig","componentId","TextSkeleton","_ref","lines","width","roundness","_ref$size","size","props","createElement","Array","from","_","w","concat","style"],"sources":["C:/Users/20618801/Desktop/src/node_modules/@salutejs/plasma-core/es/components/Skeleton/TextSkeleton.js"],"sourcesContent":["var _excluded = [\"lines\", \"width\", \"roundness\", \"size\"];\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { DEFAULT_TEXT_SIZE } from './Skeleton';\nimport { LineSkeleton } from './LineSkeleton';\nvar variousWidth = [7.58, 5.27, 13.54, 6.63, 0.28, 14.8, 0.33, 11.26, 14.1, 10.59, 3.38, 13.5, 7.71, 3.34, 7.96];\nvar StyledTextSkeleton = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-x4ekfh-0\"\n})([\"display:flex;flex-direction:column;width:100%;\"]); // TODO: https://github.com/salute-developers/plasma/issues/230\n\n/**\n * Компонент для создания плейсхолдера нескольких строк текста.\n * Размеры компонента задаются с помощью констант и соответствуют размерам [типографических элементов](/?path=/docs/).\n */\nexport var TextSkeleton = function TextSkeleton(_ref) {\n  var lines = _ref.lines,\n      width = _ref.width,\n      roundness = _ref.roundness,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? DEFAULT_TEXT_SIZE : _ref$size,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(StyledTextSkeleton, props, Array.from(Array(lines), function (_, i) {\n    var w;\n\n    if (width) {\n      // TODO; https://github.com/salute-developers/plasma/issues/230\n      w = width;\n    } else {\n      switch (true) {\n        // Последняя строка\n        case i === lines - 1 && lines !== 1:\n          w = 45 - variousWidth[i % variousWidth.length];\n          break;\n        // Единственная или первая из двух\n\n        case lines === 1 || lines === 2:\n          w = 100;\n          break;\n\n        default:\n          w = 100 - variousWidth[i % variousWidth.length];\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(LineSkeleton, {\n      key: \"line:\".concat(i),\n      size: size,\n      roundness: roundness,\n      style: {\n        width: \"\".concat(w, \"%\")\n      }\n    });\n  }));\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}