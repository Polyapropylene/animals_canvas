{"ast":null,"code":"import { useEffect } from 'react';\n/**\n * Отслеживает изменение размеров переданного элемента\n * @param {React.Ref<T>} ref - реф элемента, за которым нужно следить\n * @callback callback - функция, которая вызывается при изменении элемента\n * @param {Element} element - элемент, размер которого изменился\n */\n\nexport var useResizeObserver = function useResizeObserver(ref, callback) {\n  useEffect(function () {\n    /* istanbul ignore if: убираем проверку на рефы из покрытия */\n    if (!(ref !== null && ref !== void 0 && ref.current)) {\n      return;\n    }\n    var current = ref.current;\n    var resizeObserver = new window.ResizeObserver(function () {\n      return callback(current);\n    });\n    resizeObserver.observe(ref.current);\n    return function () {\n      /* istanbul ignore if: убираем проверку на рефы из покрытия */\n      if (!(ref !== null && ref !== void 0 && ref.current)) {\n        return;\n      }\n      resizeObserver.unobserve(ref.current);\n    };\n  }, [ref]);\n};","map":{"version":3,"names":["useEffect","useResizeObserver","ref","callback","current","resizeObserver","window","ResizeObserver","observe","unobserve"],"sources":["/Users/polechkagadukina/Desktop/src/node_modules/@salutejs/plasma-core/es/hooks/useResizeObserver.js"],"sourcesContent":["import { useEffect } from 'react';\n/**\n * Отслеживает изменение размеров переданного элемента\n * @param {React.Ref<T>} ref - реф элемента, за которым нужно следить\n * @callback callback - функция, которая вызывается при изменении элемента\n * @param {Element} element - элемент, размер которого изменился\n */\n\nexport var useResizeObserver = function useResizeObserver(ref, callback) {\n  useEffect(function () {\n    /* istanbul ignore if: убираем проверку на рефы из покрытия */\n    if (!(ref !== null && ref !== void 0 && ref.current)) {\n      return;\n    }\n\n    var current = ref.current;\n    var resizeObserver = new window.ResizeObserver(function () {\n      return callback(current);\n    });\n    resizeObserver.observe(ref.current);\n    return function () {\n      /* istanbul ignore if: убираем проверку на рефы из покрытия */\n      if (!(ref !== null && ref !== void 0 && ref.current)) {\n        return;\n      }\n\n      resizeObserver.unobserve(ref.current);\n    };\n  }, [ref]);\n};"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,iBAAiB,GAAG,SAASA,iBAAiB,CAACC,GAAG,EAAEC,QAAQ,EAAE;EACvEH,SAAS,CAAC,YAAY;IACpB;IACA,IAAI,EAAEE,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,KAAK,CAAC,IAAIA,GAAG,CAACE,OAAO,CAAC,EAAE;MACpD;IACF;IAEA,IAAIA,OAAO,GAAGF,GAAG,CAACE,OAAO;IACzB,IAAIC,cAAc,GAAG,IAAIC,MAAM,CAACC,cAAc,CAAC,YAAY;MACzD,OAAOJ,QAAQ,CAACC,OAAO,CAAC;IAC1B,CAAC,CAAC;IACFC,cAAc,CAACG,OAAO,CAACN,GAAG,CAACE,OAAO,CAAC;IACnC,OAAO,YAAY;MACjB;MACA,IAAI,EAAEF,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,KAAK,CAAC,IAAIA,GAAG,CAACE,OAAO,CAAC,EAAE;QACpD;MACF;MAEAC,cAAc,CAACI,SAAS,CAACP,GAAG,CAACE,OAAO,CAAC;IACvC,CAAC;EACH,CAAC,EAAE,CAACF,GAAG,CAAC,CAAC;AACX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}